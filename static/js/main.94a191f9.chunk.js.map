{"version":3,"sources":["actions/index.js","components/Search.js","secrets.js","components/MovieItem.js","components/MovieResults.js","components/FavoriteMovieList.js","components/App.js","registerServiceWorker.js","reducers/fav_reducer.js","reducers/index.js","reducers/movies_reducer.js","index.js"],"names":["MOVIES","ADD_FAV","REMOVE_FAV","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","query","_this2","console","log","url","concat","fetch","method","then","response","json","jsonObj","movies","results","_this3","react_default","a","createElement","Form","inline","className","FormGroup","FormControl","type","placeholder","onChange","event","setState","target","value","Button","bsStyle","onClick","search","Component","connect","items","MovieItem","favorited","addToFavorite","movie","removeFromFavorite","href","id","src","poster_path","alt","title","overview","release_date","aria-hidden","vote_average","showButton","displayFav","MovieResults","react_router_dom","to","components_Search","map","item","components_MovieItem","key","FavoriteMovieList","favorites","App","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","arguments","length","undefined","action","toConsumableArray","filter","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","components_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.94a191f9.chunk.js","sourcesContent":["export const MOVIES = \"MOVIES\";\nexport const ADD_FAV = \"ADD_FAV\";\nexport const REMOVE_FAV = \"REMOVE_FAV\";\n\nexport function movies(items) {\n\tconst action = {\n\t\ttype: MOVIES,\n\t\titems\n\t}\n\treturn action;\n}\n\nexport function addToFavorite(movie) {\n\treturn {\n\t\ttype: ADD_FAV,\n\t\tmovie\n\t}\n}\n\nexport function removeFromFavorite(movie) {\n\treturn {\n\t\ttype: REMOVE_FAV,\n\t\tmovie\n\t}\n}","import React, { Component } from 'react';\n\nimport { Form, FormGroup, Button, FormControl } from 'react-bootstrap';\n\nimport { API_KEY } from '../secrets';\nimport { movies } from '../actions';\nimport { connect } from 'react-redux';\n\nclass Search extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tquery: ''\n\t\t};\n\t}\n\n\tsearch() {\n\t\tconsole.log('Search button clicked', this.state.query);\n\t\tlet url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${\n\t\t\tthis.state.query\n\t\t}`;\n\t\t// console.log(url);\n\t\tfetch(url, {\n\t\t\tmethod: 'GET'\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(jsonObj => {\n\t\t\t\tthis.props.movies(jsonObj.results);\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Form inline className=\"col-md-12 col-md-offset-4\">\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<p>Search </p>{' '}\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"wonder woman\"\n\t\t\t\t\t\t\tonChange={event => this.setState({ query: event.target.value })}\n\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t<Button bsStyle=\"success\" onClick={() => this.search()}>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(\n\tnull,\n\t{ movies }\n)(Search);\n","export const API_KEY = \"b7b132ef558b085b8867a43b9304df23\";","import React, { Component } from 'react';\nimport { addToFavorite, removeFromFavorite } from '../actions';\nimport { connect } from 'react-redux';\n\nconst urlComponent = \"https://image.tmdb.org/t/p/w342\";\nconst movieUrl = \"https://www.themoviedb.org/movie/\";\n\nclass MovieItem extends Component {\n\tconstructor(props) {\n\t  super(props);\n\t\n\t  this.state = {\n\t  \tfavorited: false\n\t  };\n\t}\n\n\taddToFavorite() {\n\t\tthis.setState({favorited: !this.state.favorited});\n\t\tthis.props.addToFavorite(this.props.movie);\n\t}\n\n\tremoveFromFavorite() {\n\t\tthis.setState({favorited: !this.state.favorited});\n\t\tthis.props.removeFromFavorite(this.props.movie);\n\t}\n\n\tdisplayFav() {\n\t\tif(!this.state.favorited) {\n\t\t\treturn <span className=\"glyphicon glyphicon-heart-empty\"\n\t\t\t\tonClick={()=>this.addToFavorite()}\n\t\t\t></span>\n\t\t} else {\n\t\t\treturn <span className=\"glyphicon glyphicon-heart\"\n\t\t\t\tonClick={()=>this.removeFromFavorite()}\n\t\t\t\t></span>\n\t\t}\n\t}\n\trender(){\n\t\treturn(\n\t\t  <div className=\"col-sm-12 col-sm-3\">\n\t\t    <div className=\"thumbnail\">\n\t\t      <a href={movieUrl+this.props.movie.id} target=\"_blank\"><img src={urlComponent+this.props.movie.poster_path} alt={this.props.movie.title+ \" Image\"} /></a>\n\t\t      <div className=\"caption\">\n\t\t        <h3>{this.props.movie.title}</h3>\n\t\t        <p>{this.props.movie.overview}</p>\n\t\t        <p>Release Date - {this.props.movie.release_date}</p>\n\t\t        <p>Ratings - <span className=\"badge badge-default\"><span className=\"glyphicon glyphicon-star\" aria-hidden=\"true\"></span> {this.props.movie.vote_average}</span></p>\n\t\t        <p>{this.props.showButton ? this.displayFav() : null}</p>\n\t\t      </div>\n\t\t    </div>\n\t\t  </div>\n\t\t)\n\t}\n}\n\nexport default connect(null, { addToFavorite, removeFromFavorite })(MovieItem);\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport Search from './Search';\nimport { connect } from 'react-redux';\nimport MovieItem from './MovieItem';\nimport { Link } from 'react-router-dom';\n\nclass MovieResults extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Link to=\"/fav\">Favorite</Link>\n\t\t\t\t<Search />\n\t\t\t\t{this.props.movies.map(item => {\n\t\t\t\t\treturn <MovieItem movie={item} key={item.id} showButton={true}/>\n\t\t\t\t})\n\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapStateToProps(state) {\n\tconsole.log(state)\n\treturn {\n\t\tmovies: state.movies\n\t}\n}\n\nexport default connect(mapStateToProps, null)(MovieResults);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MovieItem from './MovieItem';\nimport { Link } from 'react-router-dom';\n\nclass FavoriteMovieList extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t\t<h4> My Favorite Movies</h4>\n\t\t\t\t{this.props.favorites.map(movie => {\n\t\t\t\t\treturn <MovieItem movie={movie} key={movie.id}\n\t\t\t\t\t\tshowButton={false}/>\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tfavorites: state.favorites\n\t}\n}\n\nexport default connect(mapStateToProps, null)(FavoriteMovieList);","import React, { Component } from 'react';\nimport MovieResults from './MovieResults';\nimport FavoriteMovieList from './FavoriteMovieList';\nimport { \n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row text-center\">\n          <div className=\"jumbotron\">\n            <h1>Movies App</h1>\n            <p>Who doesn't Love movies?</p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <Router>\n            <Switch>\n              <Route exact path='/' component={MovieResults} />\n              <Route path='/fav' component={FavoriteMovieList} />\n            </Switch>\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_FAV, REMOVE_FAV } from '../actions';\n\nfunction addToFavorite(state = [], action) {\n  let favoriteMovies;\n\n\tswitch(action.type) {\n\n\t\tcase ADD_FAV: \n\t\t\tconsole.log(\"Movie added to favorite\", action.movie);\n\t\t favoriteMovies = [...state, action.movie];\n      return favoriteMovies;\n      \n\t\tcase REMOVE_FAV:\n\t\t\tfavoriteMovies = state.filter(item=> item.id !== action.movie.id);\n      return favoriteMovies;\n      \n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default addToFavorite;","import movies from './movies_reducer';\nimport { combineReducers } from 'redux';\nimport favorites from './fav_reducer';\n\nconst rootReducer = combineReducers({\n\tmovies,\n\tfavorites\n});\n\nexport default rootReducer;","import { MOVIES } from '../actions';\n\nexport default function movies(state = [], action) {\n\tswitch(action.type) {\n\t\tcase MOVIES:\n\t\t\tconsole.log(\"Movies are \",action.items);\n\t\t\treturn action.items;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, \n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n\t, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}